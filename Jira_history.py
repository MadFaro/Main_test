
ffmpeg -i test.wav -filter:a loudnorm -ar 8000 -c:a pcm_s16le test2.wav
ffmpeg -i test.wav -filter:a loudnorm -ar 8000 -c:a pcm_s16le -b:a 128k -ac 2 test2.wav
ffmpeg -i test2.wav -af "volume=3.5" test3.wav
ffmpeg -i test3.wav -filter:a "atempo=0.95" test4.wav


ffmpeg -i input.wav -ar 16000 output.wav
ffmpeg -i output.wav -af "highpass=f=300, lowpass=f=3000" output1.wav
ffmpeg -i output1.wav -af "volume=1.5" output2.wav
ffmpeg -i output2.wav -af "equalizer=f=1000:width_type=h:w=200:g=5" output3.wav
ffmpeg -i output3.wav -af "crystalizer" output4.wav
=ЕСЛИОШИБКА((((@Agents($AH$2;$AI$2;I18;I68)/30)*22,5)/0,85)/I166;2)


Совместно с коллегами из отдела аналитики была создана и обучена ASR модель. Для этого мы использовали набор инструментов Kaldi. На просторах интернета найдены и подготовлены словари и датасеты. С помощью скрипта на python был запущен процесс обучения модели. В конечном итоге мы получили рабочий процесс, состоящий из нескольких шагов:
- Скрипт на python забирает звонки из хранилища и сегментирует их по определенным признакам
- Затем аудио дополнительно обрабатываются, удаляются шумы, нормализуется громкость, разделяются каналы на оператора и клиента и т.д.
- Далее модель транскрибирует подготовленную запись в текст и записывает данные в БД, где транскрибация дополняется данными, такими как тематики обращений, ФИО оператора и т.д.
- Параллельно работают другие скрипты и модели, которые забирают эти данные из БД дополнительно делают токенизацию и лемматизацию, и решают конкретные задачи, которые формируются на стороне контроля качества
